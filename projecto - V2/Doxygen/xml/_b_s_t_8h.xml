<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_b_s_t_8h" kind="file" language="C++">
    <compoundname>BST.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">stack</includes>
    <includes local="no">queue</includes>
    <includedby refid="_level_8h" local="yes">/home/oco/Documents/Cprojects/Athletes/projecto - V2/Headers/Level.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>queue</label>
      </node>
      <node id="2">
        <label>stack</label>
      </node>
      <node id="1">
        <label>iostream</label>
      </node>
      <node id="0">
        <label>/home/oco/Documents/Cprojects/Athletes/projecto - V2/Headers/BST.h</label>
        <link refid="_b_s_t_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>/home/oco/Documents/Cprojects/Athletes/projecto - V2/Headers/menus.h</label>
        <link refid="menus_8h"/>
      </node>
      <node id="6">
        <label>/home/oco/Documents/Cprojects/Athletes/projecto - V2/Headers/Minis.h</label>
        <link refid="_minis_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/oco/Documents/Cprojects/Athletes/projecto - V2/Headers/Level.h</label>
        <link refid="_level_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/oco/Documents/Cprojects/Athletes/projecto - V2/Headers/Juniors.h</label>
        <link refid="_juniors_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/oco/Documents/Cprojects/Athletes/projecto - V2/Headers/Seniors.h</label>
        <link refid="_seniors_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/oco/Documents/Cprojects/Athletes/projecto - V2/Headers/Club.h</label>
        <link refid="_club_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/oco/Documents/Cprojects/Athletes/projecto - V2/Headers/Juveniles.h</label>
        <link refid="_juveniles_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/oco/Documents/Cprojects/Athletes/projecto - V2/Headers/BST.h</label>
        <link refid="_b_s_t_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_b_s_t_itr_in" prot="public">BSTItrIn</innerclass>
    <innerclass refid="class_b_s_t_itr_pre" prot="public">BSTItrPre</innerclass>
    <innerclass refid="class_b_s_t_itr_post" prot="public">BSTItrPost</innerclass>
    <innerclass refid="class_b_s_t_itr_level" prot="public">BSTItrLevel</innerclass>
    <innerclass refid="class_b_s_t" prot="public">BST</innerclass>
    <innerclass refid="class_binary_node" prot="public">BinaryNode</innerclass>
    <innerclass refid="class_b_s_t" prot="public">BST</innerclass>
    <innerclass refid="class_b_s_t_itr_post" prot="public">BSTItrPost</innerclass>
    <innerclass refid="class_b_s_t_itr_pre" prot="public">BSTItrPre</innerclass>
    <innerclass refid="class_b_s_t_itr_in" prot="public">BSTItrIn</innerclass>
    <innerclass refid="class_b_s_t_itr_level" prot="public">BSTItrLevel</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ana Paula Rocha </para></simplesect>
<simplesect kind="author"><para>Henrique Cardoso </para></simplesect>
<simplesect kind="author"><para>Rosaldo Rossetii</para></simplesect>
Contains the declaration of the class <ref refid="class_b_s_t" kindref="compound">BST</ref> This file is available on Moodle. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="comment">//<sp/>-*-<sp/>Mode:<sp/>c++;<sp/>--*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_BST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_BST_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stack&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="23" refid="class_b_s_t_itr_in" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_in" kindref="compound">BSTItrIn</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="26" refid="class_b_s_t_itr_pre" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_pre" kindref="compound">BSTItrPre</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="29" refid="class_b_s_t_itr_post" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_post" kindref="compound">BSTItrPost</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="32" refid="class_b_s_t_itr_level" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_level" kindref="compound">BSTItrLevel</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="35" refid="class_b_s_t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t" kindref="compound">BST</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="38" refid="class_binary_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_binary_node" kindref="compound">BinaryNode</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>Comparable<sp/>element;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode</ref><sp/>*left;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode</ref><sp/>*right;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>theElement,<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode</ref><sp/>*lt,<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode</ref><sp/>*rt<sp/>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>element(<sp/>theElement<sp/>),<sp/>left(<sp/>lt<sp/>),<sp/>right(<sp/>rt<sp/>)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_binary_node_1a28a1adb9906f3ff7e12c2cb6fa2bd54e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t" kindref="compound">BST</ref>&lt;Comparable&gt;;</highlight></codeline>
<codeline lineno="48" refid="class_binary_node_1aab3993acac2ab24a0b59edb0c3acc775" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_in" kindref="compound">BSTItrIn</ref>&lt;Comparable&gt;;</highlight></codeline>
<codeline lineno="49" refid="class_binary_node_1a45a55df6f11541416d4ea7684c575c1a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_pre" kindref="compound">BSTItrPre</ref>&lt;Comparable&gt;;</highlight></codeline>
<codeline lineno="50" refid="class_binary_node_1a5dc153694be266f6e772659486219da7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_post" kindref="compound">BSTItrPost</ref>&lt;Comparable&gt;;</highlight></codeline>
<codeline lineno="51" refid="class_binary_node_1a26ff00bc0d87069aed877f10fd3c80a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_level" kindref="compound">BSTItrLevel</ref>&lt;Comparable&gt;;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t" kindref="compound">BST</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>notFound<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="class_b_s_t" kindref="compound">BST</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST</ref><sp/>&amp;<sp/>rhs<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>~<ref refid="class_b_s_t" kindref="compound">BST</ref>(<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>findMin(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>findMax(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>find(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>x<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEmpty(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printTree(<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>makeEmpty(<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insert(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>x<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>x<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST</ref><sp/>&amp;<sp/>operator=(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST</ref><sp/>&amp;<sp/>rhs<sp/>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*root;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>ITEM_NOT_FOUND;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>elementAt(<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*t<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insert(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>x,<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>&amp;<sp/>t<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>x,<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>&amp;<sp/>t<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>findMin(<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*t<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>findMax(<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*t<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>find(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>x,<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*t<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>makeEmpty(<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>&amp;<sp/>t<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printTree(<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*t<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>clone(<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*t<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_b_s_t_1aab3993acac2ab24a0b59edb0c3acc775" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_in" kindref="compound">BSTItrIn</ref>&lt;Comparable&gt;;</highlight></codeline>
<codeline lineno="90" refid="class_b_s_t_1a45a55df6f11541416d4ea7684c575c1a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_pre" kindref="compound">BSTItrPre</ref>&lt;Comparable&gt;;</highlight></codeline>
<codeline lineno="91" refid="class_b_s_t_1a5dc153694be266f6e772659486219da7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_post" kindref="compound">BSTItrPost</ref>&lt;Comparable&gt;;</highlight></codeline>
<codeline lineno="92" refid="class_b_s_t_1a26ff00bc0d87069aed877f10fd3c80a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_level" kindref="compound">BSTItrLevel</ref>&lt;Comparable&gt;;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>all<sp/>&quot;matching&quot;<sp/>is<sp/>based<sp/>on<sp/>the<sp/>&lt;<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="98" refid="class_b_s_t_1a3185a79cf472271f122a97d0f59022d1" refkind="member"><highlight class="normal"><ref refid="class_b_s_t_1a3185a79cf472271f122a97d0f59022d1" kindref="member">BST&lt;Comparable&gt;::BST</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>notFound<sp/>)<sp/>:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>root(NULL),<sp/>ITEM_NOT_FOUND(<sp/>notFound<sp/>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="103" refid="class_b_s_t_1a163232cc6ffcbd1a51707efcc3fa36ca" refkind="member"><highlight class="normal"><ref refid="class_b_s_t_1a3185a79cf472271f122a97d0f59022d1" kindref="member">BST&lt;Comparable&gt;::BST</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST&lt;Comparable&gt;</ref><sp/>&amp;<sp/>rhs<sp/>)<sp/>:<sp/>root(<sp/>NULL<sp/>),<sp/>ITEM_NOT_FOUND(<sp/>rhs.ITEM_NOT_FOUND<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>rhs;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="110" refid="class_b_s_t_1abf3125f968641c8726101c5dd18f36be" refkind="member"><highlight class="normal"><ref refid="class_b_s_t_1abf3125f968641c8726101c5dd18f36be" kindref="member">BST&lt;Comparable&gt;::~BST</ref>(<sp/>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="class_b_s_t_1a050d829503a88714c4ad0773cf6d3af6" kindref="member">makeEmpty</ref>(<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="116" refid="class_b_s_t_1a2b117df6521c7d61dac75ff2c938bae7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_1a2b117df6521c7d61dac75ff2c938bae7" kindref="member">BST&lt;Comparable&gt;::insert</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>x<sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="class_b_s_t_1a2b117df6521c7d61dac75ff2c938bae7" kindref="member">insert</ref>(<sp/>x,<sp/>root<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="122" refid="class_b_s_t_1a6f01a0b44daf82a42022b6eb4c0df7a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_1a6f01a0b44daf82a42022b6eb4c0df7a2" kindref="member">BST&lt;Comparable&gt;::remove</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>x<sp/>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(<sp/>x,<sp/>root<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="128" refid="class_b_s_t_1aa52491ff35aec517961937a17a9fa493" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/><ref refid="class_b_s_t_1aa52491ff35aec517961937a17a9fa493" kindref="member">BST&lt;Comparable&gt;::findMin</ref>(<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="129"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elementAt(<sp/><ref refid="class_b_s_t_1aa52491ff35aec517961937a17a9fa493" kindref="member">findMin</ref>(<sp/>root<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="134" refid="class_b_s_t_1a03485f3b0b150f1e69a12c28d26d8092" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/><ref refid="class_b_s_t_1a03485f3b0b150f1e69a12c28d26d8092" kindref="member">BST&lt;Comparable&gt;::findMax</ref>(<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="135"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elementAt(<sp/><ref refid="class_b_s_t_1a03485f3b0b150f1e69a12c28d26d8092" kindref="member">findMax</ref>(<sp/>root<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/><ref refid="class_b_s_t_1aaf4eb6869f68db0069534f7b2dfbe53b" kindref="member">BST&lt;Comparable&gt;::</ref></highlight></codeline>
<codeline lineno="141" refid="class_b_s_t_1aaf4eb6869f68db0069534f7b2dfbe53b" refkind="member"><highlight class="normal"><ref refid="class_b_s_t_1aaf4eb6869f68db0069534f7b2dfbe53b" kindref="member">find</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>x<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="142"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elementAt(<sp/><ref refid="class_b_s_t_1aaf4eb6869f68db0069534f7b2dfbe53b" kindref="member">find</ref>(<sp/>x,<sp/>root<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="147" refid="class_b_s_t_1a050d829503a88714c4ad0773cf6d3af6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_1a050d829503a88714c4ad0773cf6d3af6" kindref="member">BST&lt;Comparable&gt;::makeEmpty</ref>(<sp/>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="class_b_s_t_1a050d829503a88714c4ad0773cf6d3af6" kindref="member">makeEmpty</ref>(<sp/>root<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="153" refid="class_b_s_t_1a10fd737b2be62437023407fdc123f728" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_1a10fd737b2be62437023407fdc123f728" kindref="member">BST&lt;Comparable&gt;::isEmpty</ref>(<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="154"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root<sp/>==<sp/>NULL;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="160" refid="class_b_s_t_1a91e830925c48040d4c4dbb7d971c3bfe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_1a91e830925c48040d4c4dbb7d971c3bfe" kindref="member">BST&lt;Comparable&gt;::printTree</ref>(<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="161"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="class_b_s_t_1a10fd737b2be62437023407fdc123f728" kindref="member">isEmpty</ref>(<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Empty<sp/>tree&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_s_t_1a91e830925c48040d4c4dbb7d971c3bfe" kindref="member">printTree</ref>(<sp/>root<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST&lt;Comparable&gt;</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="class_b_s_t_1aa80c39f454c89d4a202be3d1445823f3" kindref="member">BST&lt;Comparable&gt;::</ref></highlight></codeline>
<codeline lineno="171" refid="class_b_s_t_1aa80c39f454c89d4a202be3d1445823f3" refkind="member"><highlight class="normal"><ref refid="class_b_s_t_1aa80c39f454c89d4a202be3d1445823f3" kindref="member">operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST&lt;Comparable&gt;</ref><sp/>&amp;<sp/>rhs<sp/>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs<sp/>)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_s_t_1a050d829503a88714c4ad0773cf6d3af6" kindref="member">makeEmpty</ref>(<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/>=<sp/>clone(<sp/>rhs.root<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/><ref refid="class_b_s_t" kindref="compound">BST&lt;Comparable&gt;::</ref></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="class_b_s_t" kindref="compound">elementAt</ref>(<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*t<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="185"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ITEM_NOT_FOUND;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t-&gt;element;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_1a2b117df6521c7d61dac75ff2c938bae7" kindref="member">BST&lt;Comparable&gt;::</ref></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><ref refid="class_b_s_t_1a2b117df6521c7d61dac75ff2c938bae7" kindref="member">insert</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>x,<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>&amp;<sp/>t<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="196"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref>(<sp/>x,<sp/>NULL,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>x<sp/>&lt;<sp/>t-&gt;element<sp/>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_s_t_1a2b117df6521c7d61dac75ff2c938bae7" kindref="member">insert</ref>(<sp/>x,<sp/>t-&gt;left<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t-&gt;element<sp/>&lt;<sp/>x<sp/>)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_s_t_1a2b117df6521c7d61dac75ff2c938bae7" kindref="member">insert</ref>(<sp/>x,<sp/>t-&gt;right<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>else</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Duplicate;<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_1a6f01a0b44daf82a42022b6eb4c0df7a2" kindref="member">BST&lt;Comparable&gt;::</ref></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><ref refid="class_b_s_t_1a6f01a0b44daf82a42022b6eb4c0df7a2" kindref="member">remove</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>x,<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>&amp;<sp/>t<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="210"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Item<sp/>not<sp/>found;<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>x<sp/>&lt;<sp/>t-&gt;element<sp/>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(<sp/>x,<sp/>t-&gt;left<sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t-&gt;element<sp/>&lt;<sp/>x<sp/>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(<sp/>x,<sp/>t-&gt;right<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t-&gt;left<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>t-&gt;right<sp/>!=<sp/>NULL<sp/>)<sp/></highlight><highlight class="comment">//<sp/>Two<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;element<sp/>=<sp/><ref refid="class_b_s_t_1aa52491ff35aec517961937a17a9fa493" kindref="member">findMin</ref>(<sp/>t-&gt;right<sp/>)-&gt;element;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(<sp/>t-&gt;element,<sp/>t-&gt;right<sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*oldNode<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>(<sp/>t-&gt;left<sp/>!=<sp/>NULL<sp/>)<sp/>?<sp/>t-&gt;left<sp/>:<sp/>t-&gt;right;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>oldNode;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="class_b_s_t_1aa52491ff35aec517961937a17a9fa493" kindref="member">BST&lt;Comparable&gt;::findMin</ref>(<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*t<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="233"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t-&gt;left<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_1aa52491ff35aec517961937a17a9fa493" kindref="member">findMin</ref>(<sp/>t-&gt;left<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><ref refid="class_b_s_t_1a03485f3b0b150f1e69a12c28d26d8092" kindref="member">BST&lt;Comparable&gt;::findMax</ref>(<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*t<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="245"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>t-&gt;right<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>t-&gt;right;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><ref refid="class_b_s_t_1aaf4eb6869f68db0069534f7b2dfbe53b" kindref="member">BST&lt;Comparable&gt;::</ref></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><ref refid="class_b_s_t_1aaf4eb6869f68db0069534f7b2dfbe53b" kindref="member">find</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Comparable<sp/>&amp;<sp/>x,<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*t<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="256"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>x<sp/>&lt;<sp/>t-&gt;element<sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_1aaf4eb6869f68db0069534f7b2dfbe53b" kindref="member">find</ref>(<sp/>x,<sp/>t-&gt;left<sp/>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t-&gt;element<sp/>&lt;<sp/>x<sp/>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_1aaf4eb6869f68db0069534f7b2dfbe53b" kindref="member">find</ref>(<sp/>x,<sp/>t-&gt;right<sp/>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">/******<sp/>NONRECURSIVE<sp/>VERSION*************************</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryNode&lt;Comparable&gt;<sp/>*</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BST&lt;Comparable&gt;::</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>find(<sp/>const<sp/>Comparable<sp/>&amp;<sp/>x,<sp/>BinaryNode&lt;Comparable&gt;<sp/>*t<sp/>)<sp/>const</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(<sp/>t<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>x<sp/>&lt;<sp/>t-&gt;element<sp/>)</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>t-&gt;left;</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if(<sp/>t-&gt;element<sp/>&lt;<sp/>x<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>t-&gt;right;</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>t;<sp/><sp/><sp/><sp/>//<sp/>Match</highlight></codeline>
<codeline lineno="279"><highlight class="comment"></highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>NULL;<sp/><sp/><sp/>//<sp/>No<sp/>match</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="comment">*****************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_1a050d829503a88714c4ad0773cf6d3af6" kindref="member">BST&lt;Comparable&gt;::</ref></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><ref refid="class_b_s_t_1a050d829503a88714c4ad0773cf6d3af6" kindref="member">makeEmpty</ref>(<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>&amp;<sp/>t<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="290"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_s_t_1a050d829503a88714c4ad0773cf6d3af6" kindref="member">makeEmpty</ref>(<sp/>t-&gt;left<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_s_t_1a050d829503a88714c4ad0773cf6d3af6" kindref="member">makeEmpty</ref>(<sp/>t-&gt;right<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>t<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_1a91e830925c48040d4c4dbb7d971c3bfe" kindref="member">BST&lt;Comparable&gt;::printTree</ref>(<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*t<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="302"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t<sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_s_t_1a91e830925c48040d4c4dbb7d971c3bfe" kindref="member">printTree</ref>(<sp/>t-&gt;left<sp/>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>t-&gt;element<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_s_t_1a91e830925c48040d4c4dbb7d971c3bfe" kindref="member">printTree</ref>(<sp/>t-&gt;right<sp/>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><ref refid="class_b_s_t" kindref="compound">BST&lt;Comparable&gt;::clone</ref>(<sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>t<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="314"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref>(<sp/>t-&gt;element,<sp/>clone(<sp/>t-&gt;left<sp/>),<sp/>clone(<sp/>t-&gt;right<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">/**************</highlight></codeline>
<codeline lineno="323"><highlight class="comment">//<sp/>Iteradores</highlight></codeline>
<codeline lineno="324"><highlight class="comment">**************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_post" kindref="compound">BSTItrPost</ref><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="class_b_s_t_itr_post" kindref="compound">BSTItrPost</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST&lt;Comparable&gt;</ref><sp/>&amp;bt);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>advance();</highlight></codeline>
<codeline lineno="333" refid="class_b_s_t_itr_post_1a72446e4d0df0bcafc14294a78faeb56e" refkind="member"><highlight class="normal"><sp/><sp/>Comparable<sp/>&amp;<ref refid="class_b_s_t_itr_post_1a72446e4d0df0bcafc14294a78faeb56e" kindref="member">retrieve</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itrStack.top()-&gt;element;<sp/>}</highlight></codeline>
<codeline lineno="334" refid="class_b_s_t_itr_post_1a2f330e73bb817e8bd1c797805e66ddb7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_itr_post_1a2f330e73bb817e8bd1c797805e66ddb7" kindref="member">isAtEnd</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itrStack.empty();<sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>stack&lt;BinaryNode&lt;Comparable&gt;<sp/>*&gt;<sp/>itrStack;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>stack&lt;bool&gt;<sp/>visitStack;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>slideDown(<ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*n);</highlight></codeline>
<codeline lineno="340"><highlight class="normal">};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="344" refid="class_b_s_t_itr_post_1acf7e537dea01978f40c40909c55c56c2" refkind="member"><highlight class="normal"><ref refid="class_b_s_t_itr_post_1acf7e537dea01978f40c40909c55c56c2" kindref="member">BSTItrPost&lt;Comparable&gt;::BSTItrPost</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST&lt;Comparable&gt;</ref><sp/>&amp;bt)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bt.<ref refid="class_b_s_t_1a10fd737b2be62437023407fdc123f728" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>slideDown(bt.root);</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="351" refid="class_b_s_t_itr_post_1a376098e5a82cd02118dd4dcdec49bb26" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_itr_post_1a376098e5a82cd02118dd4dcdec49bb26" kindref="member">BSTItrPost&lt;Comparable&gt;::advance</ref><sp/>()</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>itrStack.pop();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>visitStack.pop();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!itrStack.empty())<sp/>&amp;&amp;<sp/>(visitStack.top()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>visitStack.pop();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>visitStack.push(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>slideDown(itrStack.top()-&gt;right);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_itr_post" kindref="compound">BSTItrPost&lt;Comparable&gt;::slideDown</ref>(<ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*n)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>itrStack.push(n);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;left)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visitStack.push(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n-&gt;left;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n-&gt;right)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visitStack.push(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n-&gt;right;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>visitStack.push(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_pre" kindref="compound">BSTItrPre</ref><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><ref refid="class_b_s_t_itr_pre" kindref="compound">BSTItrPre</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST&lt;Comparable&gt;</ref><sp/>&amp;bt);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>advance();</highlight></codeline>
<codeline lineno="389" refid="class_b_s_t_itr_pre_1af40033e97f63bf025c2e33a9fdce4c43" refkind="member"><highlight class="normal"><sp/><sp/>Comparable<sp/>&amp;<ref refid="class_b_s_t_itr_pre_1af40033e97f63bf025c2e33a9fdce4c43" kindref="member">retrieve</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itrStack.top()-&gt;element;<sp/>}</highlight></codeline>
<codeline lineno="390" refid="class_b_s_t_itr_pre_1ae282a7b9ffa9d250bb0f6a6d79f6e8d0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_itr_pre_1ae282a7b9ffa9d250bb0f6a6d79f6e8d0" kindref="member">isAtEnd</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itrStack.empty();<sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>stack&lt;BinaryNode&lt;Comparable&gt;<sp/>*&gt;<sp/>itrStack;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">};</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="398" refid="class_b_s_t_itr_pre_1a11b1cd4e783f153b9c1b64ce2ec8077e" refkind="member"><highlight class="normal"><ref refid="class_b_s_t_itr_pre_1a11b1cd4e783f153b9c1b64ce2ec8077e" kindref="member">BSTItrPre&lt;Comparable&gt;::BSTItrPre</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST&lt;Comparable&gt;</ref><sp/>&amp;bt)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bt.<ref refid="class_b_s_t_1a10fd737b2be62437023407fdc123f728" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>itrStack.push(bt.root);</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="405" refid="class_b_s_t_itr_pre_1a7a743d66a842018fd833fb2b0737254d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_itr_pre_1a7a743d66a842018fd833fb2b0737254d" kindref="member">BSTItrPre&lt;Comparable&gt;::advance</ref>()</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>actual<sp/>=<sp/>itrStack.top();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>seguinte<sp/>=<sp/>actual-&gt;left;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seguinte)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>itrStack.push(seguinte);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!itrStack.empty())<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>actual<sp/>=<sp/>itrStack.top();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itrStack.pop();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seguinte<sp/>=<sp/>actual<sp/>-&gt;<sp/>right;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seguinte)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>itrStack.push(seguinte);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_in" kindref="compound">BSTItrIn</ref><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><ref refid="class_b_s_t_itr_in" kindref="compound">BSTItrIn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST&lt;Comparable&gt;</ref><sp/>&amp;bt);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>advance();</highlight></codeline>
<codeline lineno="431" refid="class_b_s_t_itr_in_1ac7ac215c1247bd25fc1fdb8053826a32" refkind="member"><highlight class="normal"><sp/><sp/>Comparable<sp/>&amp;<ref refid="class_b_s_t_itr_in_1ac7ac215c1247bd25fc1fdb8053826a32" kindref="member">retrieve</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itrStack.top()-&gt;element;<sp/>}</highlight></codeline>
<codeline lineno="432" refid="class_b_s_t_itr_in_1a6f9a43217862c263a9bf15b9a08b889a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_itr_in_1a6f9a43217862c263a9bf15b9a08b889a" kindref="member">isAtEnd</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itrStack.empty();<sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>stack&lt;BinaryNode&lt;Comparable&gt;<sp/>*&gt;<sp/>itrStack;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>slideLeft(<ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*n);</highlight></codeline>
<codeline lineno="438"><highlight class="normal">};</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="441" refid="class_b_s_t_itr_in_1ac836e2f560fed9cc7ef8e5431a2836cc" refkind="member"><highlight class="normal"><ref refid="class_b_s_t_itr_in_1ac836e2f560fed9cc7ef8e5431a2836cc" kindref="member">BSTItrIn&lt;Comparable&gt;::BSTItrIn</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST&lt;Comparable&gt;</ref><sp/>&amp;bt)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bt.<ref refid="class_b_s_t_1a10fd737b2be62437023407fdc123f728" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>slideLeft(bt.root);</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_itr_in" kindref="compound">BSTItrIn&lt;Comparable&gt;::slideLeft</ref>(<ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*n)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>itrStack.push(n);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>n-&gt;left;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="457" refid="class_b_s_t_itr_in_1ac772d3ebbac748c5f8cf9bc659f2e32c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_itr_in_1ac772d3ebbac748c5f8cf9bc659f2e32c" kindref="member">BSTItrIn&lt;Comparable&gt;::advance</ref>()</highlight></codeline>
<codeline lineno="458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>actual<sp/>=<sp/>itrStack.top();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>itrStack.pop();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>seguinte<sp/>=<sp/>actual-&gt;right;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seguinte)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>slideLeft(seguinte);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_b_s_t_itr_level" kindref="compound">BSTItrLevel</ref><sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><ref refid="class_b_s_t_itr_level" kindref="compound">BSTItrLevel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST&lt;Comparable&gt;</ref><sp/>&amp;bt);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>advance();</highlight></codeline>
<codeline lineno="473" refid="class_b_s_t_itr_level_1a0340bd9f21f72ae25348f383e67e7f91" refkind="member"><highlight class="normal"><sp/><sp/>Comparable<sp/>&amp;<ref refid="class_b_s_t_itr_level_1a0340bd9f21f72ae25348f383e67e7f91" kindref="member">retrieve</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itrQueue.front()-&gt;element;<sp/>}</highlight></codeline>
<codeline lineno="474" refid="class_b_s_t_itr_level_1a89bc8e81dde255fd6bad917cacc0d489" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_itr_level_1a89bc8e81dde255fd6bad917cacc0d489" kindref="member">isAtEnd</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itrQueue.empty();<sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>queue&lt;BinaryNode&lt;Comparable&gt;<sp/>*&gt;<sp/>itrQueue;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal">};</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="482" refid="class_b_s_t_itr_level_1a8fd5cdde93eb182c4cd5cf6b2c5efaeb" refkind="member"><highlight class="normal"><ref refid="class_b_s_t_itr_level_1a8fd5cdde93eb182c4cd5cf6b2c5efaeb" kindref="member">BSTItrLevel&lt;Comparable&gt;::BSTItrLevel</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t" kindref="compound">BST&lt;Comparable&gt;</ref><sp/>&amp;bt)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bt.<ref refid="class_b_s_t_1a10fd737b2be62437023407fdc123f728" kindref="member">isEmpty</ref>())</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>itrQueue.push(bt.root);</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Comparable&gt;</highlight></codeline>
<codeline lineno="489" refid="class_b_s_t_itr_level_1ad54a6fa289a59d6050b507abe40d463b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_b_s_t_itr_level_1ad54a6fa289a59d6050b507abe40d463b" kindref="member">BSTItrLevel&lt;Comparable&gt;::advance</ref>()</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>actual<sp/>=<sp/>itrQueue.front();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>itrQueue.pop();</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><ref refid="class_binary_node" kindref="compound">BinaryNode&lt;Comparable&gt;</ref><sp/>*<sp/>seguinte<sp/>=<sp/>actual-&gt;left;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seguinte)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>itrQueue.push(seguinte);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>seguinte<sp/>=<sp/>actual-&gt;right;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seguinte)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>itrQueue.push(seguinte);</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/oco/Documents/Cprojects/Athletes/projecto - V2/Headers/BST.h"/>
  </compounddef>
</doxygen>
